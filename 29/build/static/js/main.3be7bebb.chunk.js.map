{"version":3,"sources":["actions/index.js","components/Input.jsx","components/CurrentForecast.jsx","components/Card.jsx","components/Weather.jsx","App.js","reducers/placeReducer.js","reducers/placeDataReducer.js","reducers/errorReducer.js","reducers/loadingReducer.js","reducers/index.js","store.js","index.js"],"names":["setPlace","place","type","payload","getError","msg","setLoading","load","Input","useSelector","state","dispatch","useDispatch","className","placeholder","value","onChange","e","target","onClick","fetch","then","res","json","body","location","getPlaceData","CurrentForecast","placeData","d","Date","name","getMonth","getDate","getFullYear","src","current","condition","icon","alt","text","temp_c","forecast","forecastday","day","maxtemp_c","mintemp_c","Card","Weather","error","loading","App","placeReducer","action","placeDataReducer","errorReducer","loadingReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3be7bebb.chunk.js","sourcesContent":["const setPlace = (place) => {\r\n  return {\r\n    type: \"UPDATE_VALUE\",\r\n    payload: place,\r\n  };\r\n};\r\n\r\nconst getError = (msg) => {\r\n  return {\r\n    type: \"UPDATE_ERROR\",\r\n    payload: msg,\r\n  };\r\n};\r\n\r\nconst setLoading = (load) => {\r\n  return {\r\n    type: \"UPDATE_LOADING\",\r\n    payload: load,\r\n  };\r\n};\r\n\r\nconst getPlaceData = (place) => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `https://api.weatherapi.com/v1/forecast.json?key=7d3ce9f8fbce44f392a174611212109&q=${place}`\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((body) => {\r\n        dispatch(setLoading(false));\r\n        if (body.location) {\r\n          dispatch(getError(\"\"));\r\n          return dispatch({\r\n            type: \"UPDATED_PLACEDATA\",\r\n            payload: body,\r\n          });\r\n        } else {\r\n          dispatch(getError(\"WRONG QUERY\"));\r\n          return dispatch({\r\n            type: \"UPDATED_PLACEDATA\",\r\n            payload: \"\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport { setPlace, getPlaceData, getError, setLoading };\r\n\r\n// fetch(\r\n//     `http://api.weatherapi.com/v1/current.json?key=7d3ce9f8fbce44f392a174611212109&q=${value}`\r\n//   )\r\n//     .then((res) => {\r\n//       return res.json();\r\n//     })\r\n//     .then((body) => {\r\n//       setLoading(false);\r\n//       if (body.location) {\r\n//         setPlaceData(body);\r\n//         setError(\"\");\r\n//       } else {\r\n//         setError(\"Wrong Query\");\r\n//         setPlaceData(\"\");\r\n//       }\r\n//     });\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { setPlace, getPlaceData, setLoading } from \"../actions\";\r\n\r\nconst Input = () => {\r\n  const place = useSelector((state) => state.place);\r\n  const dispatch = useDispatch();\r\n\r\n  function fetchData() {\r\n    dispatch(setLoading(true));\r\n    dispatch(getPlaceData(place));\r\n    dispatch(setPlace(\"\"));\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-city\">\r\n      <div className=\"place\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"City\"\r\n          value={place}\r\n          onChange={(e) => {\r\n            dispatch(setPlace(e.target.value));\r\n          }}\r\n        ></input> <br />\r\n        <button onClick={fetchData}>Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst CurrentForecast = () => {\r\n  const placeData = useSelector((state) => state.placeData);\r\n  let d = new Date();\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  return (\r\n    <div className=\"current-weather\">\r\n      <div className=\"place-info\">\r\n        <h1>{placeData.location.name}</h1>\r\n        <p>\r\n          {months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear()}\r\n        </p>\r\n        <img src={placeData.current.condition.icon} alt=\"weather\"></img>\r\n        <div>{placeData.current.condition.text}</div>\r\n      </div>\r\n      <div className=\"stats\">\r\n        <div>{placeData.current.temp_c}°</div>\r\n        <p>\r\n          {placeData.forecast.forecastday[0].day.maxtemp_c}° /{\" \"}\r\n          {placeData.forecast.forecastday[0].day.mintemp_c}°\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentForecast;\r\n","import CurrentForecast from \"./CurrentForecast\";\r\n\r\nconst Card = () => {\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <CurrentForecast />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nconst Weather = () => {\r\n  const placeData = useSelector((state) => state.placeData);\r\n  const error = useSelector((state) => state.error);\r\n  const loading = useSelector((state) => state.loading);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p className=\"weather-card\">Loading ...</p>\r\n      ) : error ? (\r\n        <p className=\"weather-card\">{error}</p>\r\n      ) : placeData === \"\" ? (\r\n        <div>{placeData}</div>\r\n      ) : (\r\n        <Card />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import \"./App.css\";\nimport Input from \"./components/Input\";\nimport Weather from \"./components/Weather\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      \n      <Input />\n      <Weather />\n    </div>\n  );\n}\n \nexport default App;\n","const placeReducer = (state = \"Mumbai\", action) => {\r\n  if (action.type === \"UPDATE_VALUE\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default placeReducer;\r\n","const placeDataReducer = (state = \"\", action) => {\r\n  if (action.type === \"UPDATED_PLACEDATA\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default placeDataReducer;\r\n","const errorReducer = (state = \"\", action) => {\r\n  if (action.type === \"UPDATE_ERROR\") {\r\n    return action.payload;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default errorReducer;\r\n","const loadingReducer = (state = false, action) => {\r\n  if (action.type === \"UPDATE_LOADING\") {\r\n    return action.payload;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default loadingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport placeReducer from \"./placeReducer\";\r\nimport placeDataReducer from \"./placeDataReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport loadingReducer from \"./loadingReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  place: placeReducer,\r\n  placeData: placeDataReducer,\r\n  error: errorReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      \n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}