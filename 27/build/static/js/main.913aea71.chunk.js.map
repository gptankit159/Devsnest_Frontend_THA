{"version":3,"sources":["components/AddTodo.jsx","actions/index.js","components/DisplayTodo.jsx","App.js","reducers/todoReducer.js","reducers/index.js","store.js","index.js"],"names":["AddTodo","useState","value","setValue","dispatch","useDispatch","type","placeholder","onChange","e","target","className","onClick","payload","title","completed","fetch","then","res","json","body","DisplayTodo","todos","useSelector","state","todo","map","index","App","todoReducer","action","newState","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAIe,SAASA,IACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cACjB,OACI,gCACI,uBAAOC,KAAK,OAAOJ,MAASA,EAAOK,YAAY,WAAWC,SAAU,SAACC,GACjEN,EAASM,EAAEC,OAAOR,UAF1B,IAGgB,uBACZ,sBAAKS,UAAU,UAAf,UACA,wBAAQC,QAAS,WACbR,ECbN,CACFE,KAAM,UACNO,QDWyB,CACbC,MAAOZ,EACPa,WAAW,KAEfZ,EAAS,KALb,iBAOA,wBAAQS,QAAS,WACbR,GCNL,SAACA,GACJY,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,OAAOhB,EAAS,CACZE,KAAM,YACNO,QAASO,WDDb,8BEjBG,SAASC,IACpB,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QACnCrB,EAAWC,cACjB,OACI,qBAAKM,UAAU,UAAf,SAEIW,EAAMI,KAAI,SAACD,EAAKE,GACZ,OAAO,sBAAKhB,UAAU,OAAf,UACH,4BAAIc,EAAKX,QACT,wBAAQF,QAAS,WACbR,EDLd,CACFE,KAAM,aACNO,QCGoCc,KADxB,sBAF8BA,QCMnCC,MAVf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,uCACA,cAACX,EAAD,IACA,cAACqB,EAAD,Q,uBCESQ,EAbK,WAAwB,IAAvBL,EAAsB,uDAAd,GAAIM,EAAU,uCACvC,GAAmB,YAAhBA,EAAOxB,KAAmB,CACzB,IAAIyB,EAAQ,sBAAOP,GAAP,CAAcM,EAAOjB,UACjC,OAAOkB,EACL,GAAmB,eAAhBD,EAAOxB,KAAsB,CAClC,IAAIyB,EAAWP,EAAMQ,QAAO,SAACP,EAAKE,GAAN,OAAeA,IAAUG,EAAOjB,WAC5D,OAAOkB,EACL,MAAmB,cAAhBD,EAAOxB,KACLwB,EAAOjB,QAEXW,GCJIS,EAJKC,YAAgB,CAChCT,KAAMI,ICGKM,EAFDC,YAAYH,EAAaI,YAAgBC,MCIvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAIFO,SAASC,eAAe,W","file":"static/js/main.913aea71.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\"\r\nimport { useState } from \"react\";\r\nimport { addTodo, loadTodos } from \"../actions\";\r\n\r\nexport default function AddTodo (){\r\n    const [value, setValue] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <div>\r\n            <input type=\"text\" value = {value} placeholder=\"Add Task\" onChange={(e)=>{\r\n                setValue(e.target.value);\r\n            }}></input> <br />\r\n            <div className=\"buttons\">\r\n            <button onClick={()=>{\r\n                dispatch(addTodo({\r\n                    title: value,\r\n                    completed: false,\r\n                }));\r\n                setValue(\"\");\r\n            }}>Add</button>\r\n            <button onClick={()=>{\r\n                dispatch(loadTodos());\r\n            }}>Load Todos</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const addTodo = (data)=>{\r\n    return{\r\n        type: \"addTodo\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst deleteTodo = (id) =>{\r\n    return{\r\n        type: \"deleteTodo\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst loadTodos = () =>{\r\n    return (dispatch)=>{\r\n        fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n        .then(res => res.json())\r\n        .then(body=>{\r\n            return dispatch({\r\n                type: \"loadTodos\",\r\n                payload: body\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport {addTodo, deleteTodo, loadTodos};","import { useSelector,useDispatch } from \"react-redux\";\r\nimport { deleteTodo } from \"../actions\";\r\n\r\nexport default function DisplayTodo (){\r\n    const todos = useSelector(state => state.todo);\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <div className=\"content\">\r\n        {\r\n            todos.map((todo,index)=>{\r\n                return <div className=\"todo\" key={index}>\r\n                    <p>{todo.title}</p>\r\n                    <button onClick={()=>{\r\n                        dispatch(deleteTodo(index));\r\n                    }}>Delete</button>\r\n\r\n                </div>\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}","import './App.css';\n\n\nimport AddTodo from './components/AddTodo';\nimport DisplayTodo from './components/DisplayTodo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Todos</h1>\n      <AddTodo />\n      <DisplayTodo />\n    </div>\n  );\n}\n\nexport default App;\n","const todoReducer = (state = [], action) =>{\r\n    if(action.type === \"addTodo\"){\r\n        let newState = [...state, action.payload];\r\n        return newState;\r\n    }else if(action.type === \"deleteTodo\"){\r\n        let newState = state.filter((todo,index)=> index !== action.payload);\r\n        return newState; \r\n    }else if(action.type === \"loadTodos\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './todoReducer';\r\nconst rootReducer = combineReducers({\r\n    todo: todoReducer,\r\n})\r\n\r\nexport default rootReducer;","import { applyMiddleware,createStore } from \"redux\";\r\nimport ReduxThunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}